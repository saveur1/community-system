import { DataTypes, Model, Optional } from 'sequelize';
import sequelize from '../config/database';

export type OrganizationType = 'stakeholder' | 'system_owner';
export type OrganizationStatus = 'active' | 'suspended' | 'deleted';

export interface OrganizationAttributes {
  id: string;
  name: string;
  description?: string | null;
  logo?: string | null;
  type: OrganizationType;
  status: OrganizationStatus;
  ownerId?: string | null; // FK to users
  createdAt?: Date;
  updatedAt?: Date;
}

export type OrganizationCreationAttributes = Optional<OrganizationAttributes, 'id' | 'description' | 'logo' | 'ownerId' | 'createdAt' | 'updatedAt'>;

class Organization extends Model<OrganizationAttributes, OrganizationCreationAttributes> implements OrganizationAttributes {
  declare id: string;
  declare name: string;
  declare description?: string | null;
  declare logo?: string | null;
  declare type: OrganizationType;
  declare status: OrganizationStatus;
  declare ownerId?: string | null;
  declare readonly createdAt: Date;
  declare readonly updatedAt: Date;

  // Association methods (generated by Sequelize)
  declare getOwner: () => Promise<any>;
  declare setOwner: (owner: any) => Promise<void>;
}

Organization.init(
  {
    id: {
      type: DataTypes.UUID,
      defaultValue: DataTypes.UUIDV4,
      primaryKey: true,
      allowNull: false,
    },
    name: {
      type: DataTypes.STRING,
      allowNull: false,
      validate: { notEmpty: true },
      comment: 'Organization name',
    },
    description: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      comment: 'Optional description',
    },
    logo: {
      type: DataTypes.STRING,
      allowNull: true,
      defaultValue: null,
      comment: 'Logo URL',
    },
    type: {
      type: DataTypes.ENUM('stakeholder', 'system_owner'),
      allowNull: false,
      defaultValue: 'stakeholder',
      comment: 'Organization classification',
    },
    status: {
      type: DataTypes.ENUM('active', 'suspended', 'deleted'),
      allowNull: false,
      defaultValue: 'active',
      comment: 'Organization status',
    },
    ownerId: {
      type: DataTypes.UUID,
      allowNull: true,
      comment: 'User who owns this organization',
      references: { model: 'users', key: 'id' },
      onDelete: 'SET NULL',
      onUpdate: 'CASCADE',
    },
  },
  {
    sequelize,
    modelName: 'Organization',
    tableName: 'organizations',
    timestamps: true,
  }
);

export default Organization;

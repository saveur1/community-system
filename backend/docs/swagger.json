{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserStatus": {
				"type": "string",
				"enum": [
					"pending",
					"active",
					"inactive"
				]
			},
			"IPermissionAttributes": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IRoleAttributes": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"category": {
						"type": "string",
						"nullable": true
					},
					"stakeholderId": {
						"type": "string",
						"nullable": true
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"permissions": {
						"items": {
							"$ref": "#/components/schemas/IPermissionAttributes"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"name",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUserAttributes.Exclude_keyofIUserAttributes.password-or-resetPasswordCode-or-resetPasswordExpires-or-googleId__": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"salary": {
						"type": "number",
						"format": "double"
					},
					"profile": {
						"type": "string"
					},
					"emailVerified": {
						"type": "boolean"
					},
					"userType": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"sector": {
						"type": "string"
					},
					"cell": {
						"type": "string"
					},
					"village": {
						"type": "string"
					},
					"preferredLanguage": {
						"type": "string"
					},
					"nearByHealthCenter": {
						"type": "string"
					},
					"schoolName": {
						"type": "string"
					},
					"schoolAddress": {
						"type": "string"
					},
					"churchName": {
						"type": "string"
					},
					"churchAddress": {
						"type": "string"
					},
					"hospitalName": {
						"type": "string"
					},
					"hospitalAddress": {
						"type": "string"
					},
					"healthCenterName": {
						"type": "string"
					},
					"healthCenterAddress": {
						"type": "string"
					},
					"epiDistrict": {
						"type": "string"
					},
					"roles": {
						"items": {
							"$ref": "#/components/schemas/IRoleAttributes"
						},
						"type": "array"
					},
					"userRoles": {
						"items": {},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"name",
					"status"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IUserResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"salary": {
						"type": "number",
						"format": "double"
					},
					"profile": {
						"type": "string"
					},
					"emailVerified": {
						"type": "boolean"
					},
					"userType": {
						"type": "string"
					},
					"district": {
						"type": "string"
					},
					"sector": {
						"type": "string"
					},
					"cell": {
						"type": "string"
					},
					"village": {
						"type": "string"
					},
					"preferredLanguage": {
						"type": "string"
					},
					"nearByHealthCenter": {
						"type": "string"
					},
					"schoolName": {
						"type": "string"
					},
					"schoolAddress": {
						"type": "string"
					},
					"churchName": {
						"type": "string"
					},
					"churchAddress": {
						"type": "string"
					},
					"hospitalName": {
						"type": "string"
					},
					"hospitalAddress": {
						"type": "string"
					},
					"healthCenterName": {
						"type": "string"
					},
					"healthCenterAddress": {
						"type": "string"
					},
					"epiDistrict": {
						"type": "string"
					},
					"roles": {
						"items": {
							"$ref": "#/components/schemas/IRoleAttributes"
						},
						"type": "array"
					},
					"userRoles": {
						"items": {},
						"type": "array"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"profileImage": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_IUserResponse-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"items": {
							"$ref": "#/components/schemas/IUserResponse"
						},
						"type": "array",
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_IUserResponse-or-null_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IUserResponse"
							}
						],
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_null_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"anyOf": [],
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"role": {
						"items": {
							"$ref": "#/components/schemas/IRoleAttributes"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"profileImage": {
						"type": "string"
					},
					"userType": {
						"type": "string"
					},
					"roleIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"stakeholderId": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IUserUpdateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"role": {
						"items": {
							"$ref": "#/components/schemas/IRoleAttributes"
						},
						"type": "array"
					},
					"status": {
						"$ref": "#/components/schemas/UserStatus"
					},
					"profileImage": {
						"type": "string"
					},
					"userType": {
						"type": "string"
					},
					"roleIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"stakeholderId": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_any-Array_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"items": {},
						"type": "array",
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_any-or-null_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SurveyCreateRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"project": {
						"type": "string"
					},
					"surveyType": {
						"type": "string",
						"enum": [
							"general",
							"report-form"
						]
					},
					"startAt": {
						"type": "string"
					},
					"endAt": {
						"type": "string"
					},
					"estimatedTime": {
						"type": "string"
					},
					"questions": {
						"items": {
							"anyOf": [
								{
									"properties": {
										"options": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"required": {
											"type": "boolean"
										},
										"description": {
											"type": "string"
										},
										"title": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"single_choice",
												"multiple_choice"
											]
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"options",
										"required",
										"description",
										"title",
										"type",
										"id"
									],
									"type": "object"
								},
								{
									"properties": {
										"placeholder": {
											"type": "string"
										},
										"required": {
											"type": "boolean"
										},
										"description": {
											"type": "string"
										},
										"title": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"text_input",
												"textarea"
											]
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"placeholder",
										"required",
										"description",
										"title",
										"type",
										"id"
									],
									"type": "object"
								}
							]
						},
						"type": "array"
					},
					"allowedRoles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"title",
					"description",
					"project",
					"startAt",
					"endAt",
					"estimatedTime",
					"questions"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SurveyUpdateRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"project": {
						"type": "string"
					},
					"surveyType": {
						"type": "string",
						"enum": [
							"general",
							"report-form"
						]
					},
					"startAt": {
						"type": "string"
					},
					"endAt": {
						"type": "string"
					},
					"estimatedTime": {
						"type": "string"
					},
					"questions": {
						"items": {
							"anyOf": [
								{
									"properties": {
										"options": {
											"items": {
												"type": "string"
											},
											"type": "array"
										},
										"required": {
											"type": "boolean"
										},
										"description": {
											"type": "string"
										},
										"title": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"single_choice",
												"multiple_choice"
											]
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"options",
										"required",
										"description",
										"title",
										"type",
										"id"
									],
									"type": "object"
								},
								{
									"properties": {
										"placeholder": {
											"type": "string"
										},
										"required": {
											"type": "boolean"
										},
										"description": {
											"type": "string"
										},
										"title": {
											"type": "string"
										},
										"type": {
											"type": "string",
											"enum": [
												"text_input",
												"textarea"
											]
										},
										"id": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"placeholder",
										"required",
										"description",
										"title",
										"type",
										"id"
									],
									"type": "object"
								}
							]
						},
						"type": "array"
					},
					"allowedRoles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"status": {
						"type": "string",
						"enum": [
							"active",
							"paused",
							"archived"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse_any_": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Period": {
				"type": "string",
				"enum": [
					"daily",
					"weekly",
					"monthly"
				]
			},
			"RoleCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"category": {
						"type": "string",
						"nullable": true
					},
					"permissionIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RoleUpdateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					},
					"category": {
						"type": "string",
						"nullable": true
					},
					"permissionIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ProjectCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"draft",
							"in_progress",
							"completed",
							"on_hold",
							"cancelled"
						]
					},
					"targetGroup": {
						"type": "string",
						"nullable": true
					},
					"stakeholderIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"documents": {
						"items": {
							"properties": {
								"deleteToken": {
									"type": "string",
									"nullable": true
								},
								"publicId": {
									"type": "string",
									"nullable": true
								},
								"userId": {
									"type": "string"
								},
								"documentUrl": {
									"type": "string",
									"nullable": true
								},
								"addedAt": {
									"type": "string",
									"format": "date-time"
								},
								"type": {
									"type": "string",
									"nullable": true
								},
								"size": {
									"type": "number",
									"format": "double",
									"nullable": true
								},
								"documentName": {
									"type": "string"
								}
							},
							"required": [
								"userId",
								"documentName"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProjectUpdateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"draft",
							"in_progress",
							"completed",
							"on_hold",
							"cancelled"
						]
					},
					"targetGroup": {
						"type": "string"
					},
					"stakeholderIds": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"documents": {
						"items": {
							"properties": {
								"deleteToken": {
									"type": "string"
								},
								"publicId": {
									"type": "string"
								},
								"userId": {
									"type": "string"
								},
								"documentUrl": {
									"type": "string"
								},
								"addedAt": {
									"type": "string",
									"format": "date-time"
								},
								"type": {
									"type": "string"
								},
								"size": {
									"type": "number",
									"format": "double"
								},
								"documentName": {
									"type": "string"
								}
							},
							"required": [
								"userId",
								"documentName"
							],
							"type": "object"
						},
						"type": "array"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PermissionCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PermissionUpdateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string",
						"nullable": true
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DocumentInput": {
				"properties": {
					"documentName": {
						"type": "string"
					},
					"documentUrl": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"publicId": {
						"type": "string",
						"nullable": true
					},
					"deleteToken": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"documentName",
					"documentUrl",
					"type"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackCreateRequest": {
				"properties": {
					"projectId": {
						"type": "string",
						"nullable": true
					},
					"mainMessage": {
						"type": "string",
						"nullable": true
					},
					"feedbackType": {
						"type": "string",
						"enum": [
							"positive",
							"negative",
							"suggestion",
							"concern",
							null
						],
						"nullable": true
					},
					"feedbackMethod": {
						"type": "string",
						"enum": [
							"text",
							"voice",
							"video"
						]
					},
					"suggestions": {
						"type": "string",
						"nullable": true
					},
					"followUpNeeded": {
						"type": "boolean"
					},
					"documents": {
						"items": {
							"$ref": "#/components/schemas/DocumentInput"
						},
						"type": "array"
					},
					"responderName": {
						"type": "string",
						"nullable": true
					},
					"otherFeedbackOn": {
						"type": "string"
					}
				},
				"required": [
					"feedbackMethod"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FeedbackUpdateRequest": {
				"properties": {
					"projectId": {
						"type": "string"
					},
					"mainMessage": {
						"type": "string"
					},
					"feedbackType": {
						"type": "string",
						"enum": [
							"positive",
							"negative",
							"suggestion",
							"concern"
						]
					},
					"feedbackMethod": {
						"type": "string",
						"enum": [
							"text",
							"voice",
							"video"
						]
					},
					"suggestions": {
						"type": "string"
					},
					"followUpNeeded": {
						"type": "boolean"
					},
					"documents": {
						"items": {
							"$ref": "#/components/schemas/DocumentInput"
						},
						"type": "array"
					},
					"responderName": {
						"type": "string"
					},
					"otherFeedbackOn": {
						"type": "string"
					},
					"status": {
						"type": "string",
						"enum": [
							"submitted",
							"Acknowledged",
							"Resolved",
							"Rejected"
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DocumentCreateRequest": {
				"properties": {
					"projectId": {
						"type": "string"
					},
					"documentName": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double",
						"nullable": true
					},
					"type": {
						"type": "string",
						"nullable": true
					},
					"addedAt": {
						"type": "string",
						"format": "date-time"
					},
					"documentUrl": {
						"type": "string",
						"nullable": true
					},
					"userId": {
						"type": "string"
					},
					"publicId": {
						"type": "string",
						"nullable": true
					},
					"deleteToken": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"documentName",
					"userId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DocumentUpdateRequest": {
				"properties": {
					"projectId": {
						"type": "string"
					},
					"documentName": {
						"type": "string"
					},
					"size": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					},
					"addedAt": {
						"type": "string",
						"format": "date-time"
					},
					"documentUrl": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"publicId": {
						"type": "string"
					},
					"deleteToken": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CommunitySessionCreateRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"shortDescription": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"video",
							"image",
							"document",
							"audio"
						]
					},
					"allowedRoles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"document": {
						"properties": {
							"deleteToken": {
								"type": "string",
								"nullable": true
							},
							"publicId": {
								"type": "string",
								"nullable": true
							},
							"userId": {
								"type": "string"
							},
							"documentUrl": {
								"type": "string",
								"nullable": true
							},
							"addedAt": {
								"type": "string",
								"format": "date-time"
							},
							"type": {
								"type": "string",
								"nullable": true
							},
							"size": {
								"type": "number",
								"format": "double",
								"nullable": true
							},
							"documentName": {
								"type": "string"
							}
						},
						"required": [
							"userId",
							"documentName"
						],
						"type": "object"
					}
				},
				"required": [
					"title",
					"shortDescription",
					"type",
					"allowedRoles",
					"document"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommunitySessionUpdateRequest": {
				"properties": {
					"title": {
						"type": "string"
					},
					"shortDescription": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"video",
							"document",
							"image",
							"audio"
						]
					},
					"allowedRoles": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"document": {
						"properties": {
							"deleteToken": {
								"type": "string"
							},
							"publicId": {
								"type": "string"
							},
							"userId": {
								"type": "string"
							},
							"documentUrl": {
								"type": "string"
							},
							"addedAt": {
								"type": "string",
								"format": "date-time"
							},
							"type": {
								"type": "string"
							},
							"size": {
								"type": "number",
								"format": "double"
							},
							"documentName": {
								"type": "string"
							}
						},
						"required": [
							"userId",
							"documentName"
						],
						"type": "object"
					},
					"isActive": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"CommentCreateRequest": {
				"properties": {
					"content": {
						"type": "string"
					},
					"timestamp": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"content"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LoginRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"identifier": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"email",
							"phone"
						]
					},
					"loginValue": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse__user-IUserResponse-or-null__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"user": {
								"allOf": [
									{
										"$ref": "#/components/schemas/IUserResponse"
									}
								],
								"nullable": true
							}
						},
						"required": [
							"user"
						],
						"type": "object",
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignupRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"address": {
						"type": "string"
					},
					"phone": {
						"type": "string"
					},
					"roleType": {
						"type": "string"
					},
					"userType": {
						"type": "string",
						"nullable": true
					},
					"district": {
						"type": "string",
						"nullable": true
					},
					"sector": {
						"type": "string",
						"nullable": true
					},
					"cell": {
						"type": "string",
						"nullable": true
					},
					"village": {
						"type": "string",
						"nullable": true
					},
					"preferredLanguage": {
						"type": "string",
						"nullable": true
					},
					"nearByHealthCenter": {
						"type": "string",
						"nullable": true
					},
					"schoolName": {
						"type": "string",
						"nullable": true
					},
					"schoolAddress": {
						"type": "string",
						"nullable": true
					},
					"churchName": {
						"type": "string",
						"nullable": true
					},
					"churchAddress": {
						"type": "string",
						"nullable": true
					},
					"hospitalName": {
						"type": "string",
						"nullable": true
					},
					"hospitalAddress": {
						"type": "string",
						"nullable": true
					},
					"healthCenterName": {
						"type": "string",
						"nullable": true
					},
					"healthCenterAddress": {
						"type": "string",
						"nullable": true
					},
					"epiDistrict": {
						"type": "string",
						"nullable": true
					}
				},
				"required": [
					"name",
					"password",
					"phone"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ForgotPasswordRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ResetPasswordRequest": {
				"properties": {
					"token": {
						"type": "string"
					},
					"newPassword": {
						"type": "string"
					}
				},
				"required": [
					"token",
					"newPassword"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ServiceResponse__success-boolean__": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"result": {
						"properties": {
							"success": {
								"type": "boolean"
							}
						},
						"required": [
							"success"
						],
						"type": "object",
						"nullable": true
					},
					"statusCode": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"success",
					"message",
					"result",
					"statusCode"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "community-listening-tool",
		"contact": {}
	},
	"paths": {
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_IUserResponse-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"user:create",
							"user:update",
							"user:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_IUserResponse-or-null_"
								}
							}
						}
					},
					"400": {
						"description": "Email already in use",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"user:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/users/{userId}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_IUserResponse-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"user:view"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_IUserResponse-or-null_"
								}
							}
						}
					},
					"400": {
						"description": "Email already in use",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"user:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [
					{
						"jwt": [
							"user:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/system-logs": {
			"get": {
				"operationId": "ListLogs",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"description": "List system logs with optional filters and pagination",
				"tags": [
					"System Logs"
				],
				"security": [
					{
						"jwt": [
							"system_log:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 25,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "action",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "resourceType",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateLog",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"description": "(Optional) Create a system log via API - marked as internal usage; protected by permission\r\nAccepts minimal payload and stores meta as provided.",
				"tags": [
					"System Logs"
				],
				"security": [
					{
						"jwt": [
							"system_log:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"meta": {
										"nullable": true
									},
									"resourceId": {
										"type": "string",
										"nullable": true
									},
									"resourceType": {
										"type": "string",
										"nullable": true
									},
									"action": {
										"type": "string"
									}
								},
								"required": [
									"action"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/system-logs/{id}": {
			"get": {
				"operationId": "GetLogById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "System log not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"description": "Get a single system log by id",
				"tags": [
					"System Logs"
				],
				"security": [
					{
						"jwt": [
							"system_log:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteLog",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"description": "Delete a system log (hard delete)",
				"tags": [
					"System Logs"
				],
				"security": [
					{
						"jwt": [
							"system_log:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/surveys": {
			"get": {
				"operationId": "GetSurveys",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"active",
								"paused",
								"archived"
							]
						}
					},
					{
						"in": "query",
						"name": "surveyType",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"general",
								"report-form"
							]
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"me",
								"others",
								"any"
							]
						}
					},
					{
						"in": "query",
						"name": "responded",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "allowed",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateSurvey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SurveyCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/surveys/{surveyId}": {
			"get": {
				"operationId": "GetSurveyById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Survey not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "surveyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateSurvey",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "surveyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SurveyUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteSurvey",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "surveyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/surveys/{surveyId}/answers": {
			"post": {
				"operationId": "SubmitAnswers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Surveys"
				],
				"security": [
					{
						"jwt": [
							"survey:respond"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "surveyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"answers": {
										"items": {
											"properties": {
												"answerOptions": {
													"items": {
														"type": "string"
													},
													"type": "array",
													"nullable": true
												},
												"answerText": {
													"type": "string",
													"nullable": true
												},
												"userId": {
													"type": "string",
													"nullable": true
												},
												"questionId": {
													"type": "string"
												}
											},
											"required": [
												"questionId"
											],
											"type": "object"
										},
										"type": "array"
									}
								},
								"required": [
									"answers"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/statistics/overview": {
			"get": {
				"operationId": "GetOverview",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						}
					}
				},
				"description": "Overview statistics (counts + deltas) for a given period.\r\nDefaults to last 30 days when startDate/endDate not provided.",
				"tags": [
					"Statistics"
				],
				"security": [
					{
						"jwt": [
							"dashboard:analytics",
							"dashboard:community"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/statistics/surveys-history": {
			"get": {
				"operationId": "GetSurveysHistory",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						}
					}
				},
				"description": "Surveys history / responses timeseries\r\nQuery params:\r\n - startDate, endDate: range (defaults to last 12 months)\r\n - group: 'daily' | 'weekly' | 'monthly' (default 'monthly')\r\n - surveyId: optional to filter to a single survey\r\n\r\nReturns: { labels: string[], data: number[] } where labels are ISO or human-readable periods",
				"tags": [
					"Statistics"
				],
				"security": [
					{
						"jwt": [
							"dashboard:analytics"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "group",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/Period"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "surveyId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/roles": {
			"get": {
				"operationId": "ListRoles",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "search",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoleCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/roles/{roleId}": {
			"get": {
				"operationId": "GetRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Role not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateRole",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RoleUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteRole",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/roles/{roleId}/permissions": {
			"post": {
				"operationId": "AddPermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"permissionId": {
										"type": "string"
									}
								},
								"required": [
									"permissionId"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/roles/{roleId}/permissions/{permissionId}": {
			"delete": {
				"operationId": "RemovePermission",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Roles"
				],
				"security": [
					{
						"jwt": [
							"role:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "roleId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "permissionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/projects": {
			"get": {
				"operationId": "GetProjects",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Projects"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Projects"
				],
				"security": [
					{
						"jwt": [
							"project:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProjectCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/projects/{projectId}": {
			"get": {
				"operationId": "GetProjectById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Project not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Projects"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "projectId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateProject",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Projects"
				],
				"security": [
					{
						"jwt": [
							"project:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "projectId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProjectUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteProject",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Projects"
				],
				"security": [
					{
						"jwt": [
							"project:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "projectId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/permissions": {
			"get": {
				"operationId": "ListPermissions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreatePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"jwt": [
							"permission:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PermissionCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/permissions/{permissionId}": {
			"get": {
				"operationId": "GetPermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"jwt": [
							"permission:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "permissionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdatePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"jwt": [
							"permission:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "permissionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PermissionUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeletePermission",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Permissions"
				],
				"security": [
					{
						"jwt": [
							"permission:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "permissionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/organizations": {
			"get": {
				"operationId": "GetOrganizations",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"stakeholder",
								"system_owner"
							]
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"active",
								"suspended",
								"deleted"
							]
						}
					}
				]
			},
			"post": {
				"operationId": "CreateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"permissionIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"ownerEmail": {
										"type": "string"
									},
									"type": {
										"type": "string",
										"enum": [
											"stakeholder",
											"system_owner"
										]
									},
									"logo": {
										"type": "string",
										"nullable": true
									},
									"description": {
										"type": "string",
										"nullable": true
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"ownerEmail",
									"name"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/organizations/{organizationId}": {
			"get": {
				"operationId": "GetOrganizationById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Organization not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateOrganization",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"status": {
										"type": "string",
										"enum": [
											"active",
											"suspended",
											"deleted"
										]
									},
									"permissionIds": {
										"items": {
											"type": "string"
										},
										"type": "array"
									},
									"ownerId": {
										"type": "string",
										"nullable": true
									},
									"type": {
										"type": "string",
										"enum": [
											"stakeholder",
											"system_owner"
										]
									},
									"logo": {
										"type": "string",
										"nullable": true
									},
									"description": {
										"type": "string",
										"nullable": true
									},
									"name": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteOrganization",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/organizations/{organizationId}/users": {
			"get": {
				"operationId": "GetOrganizationUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "organizationId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 50,
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/organizations/verify-invite": {
			"post": {
				"operationId": "VerifyInvite",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Organizations"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"phone": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"email": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"token": {
										"type": "string"
									}
								},
								"required": [
									"phone",
									"password",
									"email",
									"name",
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/feedback": {
			"get": {
				"operationId": "GetFeedback",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"submitted",
								"Acknowledged",
								"Resolved",
								"Rejected"
							]
						}
					},
					{
						"in": "query",
						"name": "feedbackType",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"positive",
								"negative",
								"suggestion",
								"concern"
							]
						}
					},
					{
						"in": "query",
						"name": "projectId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "owner",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"me",
								"other"
							]
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateFeedback",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedbackCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/feedback/user": {
			"get": {
				"operationId": "GetUserFeedback",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:personal:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"submitted",
								"Acknowledged",
								"Resolved",
								"Rejected"
							]
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/feedback/{feedbackId}": {
			"get": {
				"operationId": "GetFeedbackById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Feedback not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "feedbackId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateFeedback",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "feedbackId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FeedbackUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteFeedback",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "feedbackId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/feedback/stats/summary": {
			"get": {
				"operationId": "GetFeedbackStats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						}
					}
				},
				"tags": [
					"Feedback"
				],
				"security": [
					{
						"jwt": [
							"feedback:read"
						]
					}
				],
				"parameters": []
			}
		},
		"/api/documents": {
			"get": {
				"operationId": "GetDocuments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Documents"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "projectId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "userId",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateDocument",
				"responses": {
					"201": {
						"description": "Created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Documents"
				],
				"security": [
					{
						"jwt": [
							"project:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DocumentCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/documents/{documentId}": {
			"get": {
				"operationId": "GetDocumentById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Document not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Documents"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "documentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateDocument",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Documents"
				],
				"security": [
					{
						"jwt": [
							"project:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "documentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/DocumentUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteDocument",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Documents"
				],
				"security": [
					{
						"jwt": [
							"project:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "documentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/community-sessions": {
			"get": {
				"operationId": "GetCommunitySessions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 10,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "type",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"video",
								"image",
								"document",
								"audio"
							]
						}
					},
					{
						"in": "query",
						"name": "isActive",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateCommunitySession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommunitySessionCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/community-sessions/{sessionId}": {
			"get": {
				"operationId": "GetCommunitySessionById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Community session not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateCommunitySession",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommunitySessionUpdateRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteCommunitySession",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/community-sessions/{sessionId}/comments": {
			"get": {
				"operationId": "GetSessionComments",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"community_session:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 50,
							"format": "double",
							"type": "number"
						}
					}
				]
			},
			"post": {
				"operationId": "AddComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "sessionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommentCreateRequest"
							}
						}
					}
				}
			}
		},
		"/api/community-sessions/comments/{commentId}": {
			"put": {
				"operationId": "UpdateComment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"comment:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"content": {
										"type": "string"
									}
								},
								"required": [
									"content"
								],
								"type": "object"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteComment",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Community Sessions"
				],
				"security": [
					{
						"jwt": [
							"comment:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "commentId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					},
					"403": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignupRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/forgot-password": {
			"post": {
				"operationId": "ForgotPassword",
				"responses": {
					"200": {
						"description": "Password reset email sent",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ForgotPasswordRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/reset-password": {
			"post": {
				"operationId": "ResetPassword",
				"responses": {
					"200": {
						"description": "Password has been reset",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					},
					"400": {
						"description": "Invalid or expired reset code"
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ResetPasswordRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/google": {
			"get": {
				"operationId": "GoogleAuth",
				"responses": {
					"302": {
						"description": "",
						"headers": {
							"Location": {
								"schema": {
									"type": "string"
								},
								"required": true
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/auth/google/callback": {
			"get": {
				"operationId": "GoogleAuthCallback",
				"responses": {
					"302": {
						"description": "",
						"headers": {
							"Set-Cookie": {
								"schema": {
									"type": "string"
								},
								"required": false
							},
							"Location": {
								"schema": {
									"type": "string"
								},
								"required": true
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "code",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "error",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/me": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__user-IUserResponse-or-null__"
								}
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"200": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse__success-boolean__"
								}
							}
						},
						"headers": {
							"Set-Cookie": {
								"schema": {
									"type": "string"
								},
								"required": true
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/auth/organization-signup": {
			"post": {
				"operationId": "OrganizationSignup",
				"responses": {
					"201": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						},
						"headers": {
							"Set-Cookie": {
								"schema": {
									"type": "string"
								},
								"required": true
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any_"
								}
							}
						},
						"headers": {
							"Set-Cookie": {
								"schema": {
									"type": "string"
								},
								"required": true
							}
						}
					}
				},
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"phone": {
										"type": "string"
									},
									"password": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"organizationId": {
										"type": "string"
									},
									"token": {
										"type": "string"
									}
								},
								"required": [
									"phone",
									"password",
									"name",
									"organizationId",
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/announcements": {
			"get": {
				"operationId": "ListAnnouncements",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-Array_"
								}
							}
						}
					}
				},
				"tags": [
					"Announcements"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {
							"default": 1,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"default": 25,
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "status",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"draft",
								"scheduled",
								"sent",
								"stopped"
							]
						}
					},
					{
						"in": "query",
						"name": "q",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "startDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "endDate",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "allowed",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateAnnouncement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					}
				},
				"tags": [
					"Announcements"
				],
				"security": [
					{
						"jwt": [
							"announcement:create"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"allowedRoles": {
										"items": {
											"type": "string"
										},
										"type": "array",
										"nullable": true
									},
									"viewDetailsLink": {
										"type": "string",
										"nullable": true
									},
									"scheduledAt": {
										"type": "string",
										"nullable": true
									},
									"status": {
										"type": "string",
										"enum": [
											"draft",
											"scheduled",
											"sent"
										]
									},
									"message": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								},
								"required": [
									"message",
									"title"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/api/announcements/{id}": {
			"get": {
				"operationId": "GetAnnouncement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Announcement not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Announcements"
				],
				"security": [
					{
						"jwt": [
							"project:read"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateAnnouncement",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_any-or-null_"
								}
							}
						}
					},
					"404": {
						"description": "Announcement not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Announcements"
				],
				"security": [
					{
						"jwt": [
							"project:update"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"allowedRoles": {
										"items": {
											"type": "string"
										},
										"type": "array",
										"nullable": true
									},
									"viewDetailsLink": {
										"type": "string",
										"nullable": true
									},
									"scheduledAt": {
										"type": "string",
										"nullable": true
									},
									"status": {
										"type": "string",
										"enum": [
											"draft",
											"scheduled",
											"sent",
											"stopped"
										]
									},
									"message": {
										"type": "string"
									},
									"title": {
										"type": "string"
									}
								},
								"type": "object"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteAnnouncement",
				"responses": {
					"204": {
						"description": "No Content",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ServiceResponse_null_"
								}
							}
						}
					}
				},
				"tags": [
					"Announcements"
				],
				"security": [
					{
						"jwt": [
							"project:delete"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}
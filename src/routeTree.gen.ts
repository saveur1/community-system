/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as PostsRouteRouteImport } from './routes/posts/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as CommunityRouteRouteImport } from './routes/community/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as CommunityIndexRouteImport } from './routes/community/index'
import { Route as PostsPostIdRouteImport } from './routes/posts/$postId'
import { Route as FeedbackProgrammeRouteImport } from './routes/feedback.$programme'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as DashboardSurveysIndexRouteImport } from './routes/dashboard/surveys/index'
import { Route as DashboardSettingsIndexRouteImport } from './routes/dashboard/settings/index'
import { Route as DashboardProgrammesIndexRouteImport } from './routes/dashboard/programmes/index'
import { Route as DashboardNotificationsIndexRouteImport } from './routes/dashboard/notifications/index'
import { Route as DashboardFeedbackIndexRouteImport } from './routes/dashboard/feedback/index'
import { Route as DashboardDocumentsIndexRouteImport } from './routes/dashboard/documents/index'
import { Route as CommunitySurveysIndexRouteImport } from './routes/community/surveys/index'
import { Route as DashboardSurveysAddNewRouteImport } from './routes/dashboard/surveys/add-new'
import { Route as DashboardProgrammesAddNewRouteImport } from './routes/dashboard/programmes/add-new'
import { Route as DashboardFeedbackAddNewRouteImport } from './routes/dashboard/feedback/add-new'

const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRouteRoute = PostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const CommunityRouteRoute = CommunityRouteRouteImport.update({
  id: '/community',
  path: '/community',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const CommunityIndexRoute = CommunityIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => CommunityRouteRoute,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRouteRoute,
} as any)
const FeedbackProgrammeRoute = FeedbackProgrammeRouteImport.update({
  id: '/feedback/$programme',
  path: '/feedback/$programme',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardSurveysIndexRoute = DashboardSurveysIndexRouteImport.update({
  id: '/surveys/',
  path: '/surveys/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProgrammesIndexRoute =
  DashboardProgrammesIndexRouteImport.update({
    id: '/programmes/',
    path: '/programmes/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardNotificationsIndexRoute =
  DashboardNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardFeedbackIndexRoute = DashboardFeedbackIndexRouteImport.update({
  id: '/feedback/',
  path: '/feedback/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDocumentsIndexRoute = DashboardDocumentsIndexRouteImport.update({
  id: '/documents/',
  path: '/documents/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const CommunitySurveysIndexRoute = CommunitySurveysIndexRouteImport.update({
  id: '/surveys/',
  path: '/surveys/',
  getParentRoute: () => CommunityRouteRoute,
} as any)
const DashboardSurveysAddNewRoute = DashboardSurveysAddNewRouteImport.update({
  id: '/surveys/add-new',
  path: '/surveys/add-new',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProgrammesAddNewRoute =
  DashboardProgrammesAddNewRouteImport.update({
    id: '/programmes/add-new',
    path: '/programmes/add-new',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardFeedbackAddNewRoute = DashboardFeedbackAddNewRouteImport.update({
  id: '/feedback/add-new',
  path: '/feedback/add-new',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/community': typeof CommunityRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/community/': typeof CommunityIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/programmes/add-new': typeof DashboardProgrammesAddNewRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/community/surveys': typeof CommunitySurveysIndexRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/dashboard/programmes': typeof DashboardProgrammesIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys': typeof DashboardSurveysIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/community': typeof CommunityIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/posts': typeof PostsIndexRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/programmes/add-new': typeof DashboardProgrammesAddNewRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/community/surveys': typeof CommunitySurveysIndexRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/dashboard/programmes': typeof DashboardProgrammesIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys': typeof DashboardSurveysIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/community': typeof CommunityRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/community/': typeof CommunityIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/programmes/add-new': typeof DashboardProgrammesAddNewRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/community/surveys/': typeof CommunitySurveysIndexRoute
  '/dashboard/documents/': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback/': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications/': typeof DashboardNotificationsIndexRoute
  '/dashboard/programmes/': typeof DashboardProgrammesIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys/': typeof DashboardSurveysIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/community'
    | '/dashboard'
    | '/posts'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/community/'
    | '/dashboard/'
    | '/posts/'
    | '/dashboard/feedback/add-new'
    | '/dashboard/programmes/add-new'
    | '/dashboard/surveys/add-new'
    | '/community/surveys'
    | '/dashboard/documents'
    | '/dashboard/feedback'
    | '/dashboard/notifications'
    | '/dashboard/programmes'
    | '/dashboard/settings'
    | '/dashboard/surveys'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/community'
    | '/dashboard'
    | '/posts'
    | '/dashboard/feedback/add-new'
    | '/dashboard/programmes/add-new'
    | '/dashboard/surveys/add-new'
    | '/community/surveys'
    | '/dashboard/documents'
    | '/dashboard/feedback'
    | '/dashboard/notifications'
    | '/dashboard/programmes'
    | '/dashboard/settings'
    | '/dashboard/surveys'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/community'
    | '/dashboard'
    | '/posts'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/community/'
    | '/dashboard/'
    | '/posts/'
    | '/dashboard/feedback/add-new'
    | '/dashboard/programmes/add-new'
    | '/dashboard/surveys/add-new'
    | '/community/surveys/'
    | '/dashboard/documents/'
    | '/dashboard/feedback/'
    | '/dashboard/notifications/'
    | '/dashboard/programmes/'
    | '/dashboard/settings/'
    | '/dashboard/surveys/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  CommunityRouteRoute: typeof CommunityRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  ErrorRoute: typeof ErrorRoute
  FeedbackProgrammeRoute: typeof FeedbackProgrammeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/community': {
      id: '/community'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof CommunityRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/community/': {
      id: '/community/'
      path: '/'
      fullPath: '/community/'
      preLoaderRoute: typeof CommunityIndexRouteImport
      parentRoute: typeof CommunityRouteRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/feedback/$programme': {
      id: '/feedback/$programme'
      path: '/feedback/$programme'
      fullPath: '/feedback/$programme'
      preLoaderRoute: typeof FeedbackProgrammeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/surveys/': {
      id: '/dashboard/surveys/'
      path: '/surveys'
      fullPath: '/dashboard/surveys'
      preLoaderRoute: typeof DashboardSurveysIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/programmes/': {
      id: '/dashboard/programmes/'
      path: '/programmes'
      fullPath: '/dashboard/programmes'
      preLoaderRoute: typeof DashboardProgrammesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/notifications/': {
      id: '/dashboard/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/feedback/': {
      id: '/dashboard/feedback/'
      path: '/feedback'
      fullPath: '/dashboard/feedback'
      preLoaderRoute: typeof DashboardFeedbackIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/documents/': {
      id: '/dashboard/documents/'
      path: '/documents'
      fullPath: '/dashboard/documents'
      preLoaderRoute: typeof DashboardDocumentsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/community/surveys/': {
      id: '/community/surveys/'
      path: '/surveys'
      fullPath: '/community/surveys'
      preLoaderRoute: typeof CommunitySurveysIndexRouteImport
      parentRoute: typeof CommunityRouteRoute
    }
    '/dashboard/surveys/add-new': {
      id: '/dashboard/surveys/add-new'
      path: '/surveys/add-new'
      fullPath: '/dashboard/surveys/add-new'
      preLoaderRoute: typeof DashboardSurveysAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/programmes/add-new': {
      id: '/dashboard/programmes/add-new'
      path: '/programmes/add-new'
      fullPath: '/dashboard/programmes/add-new'
      preLoaderRoute: typeof DashboardProgrammesAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/feedback/add-new': {
      id: '/dashboard/feedback/add-new'
      path: '/feedback/add-new'
      fullPath: '/dashboard/feedback/add-new'
      preLoaderRoute: typeof DashboardFeedbackAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface CommunityRouteRouteChildren {
  CommunityIndexRoute: typeof CommunityIndexRoute
  CommunitySurveysIndexRoute: typeof CommunitySurveysIndexRoute
}

const CommunityRouteRouteChildren: CommunityRouteRouteChildren = {
  CommunityIndexRoute: CommunityIndexRoute,
  CommunitySurveysIndexRoute: CommunitySurveysIndexRoute,
}

const CommunityRouteRouteWithChildren = CommunityRouteRoute._addFileChildren(
  CommunityRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardFeedbackAddNewRoute: typeof DashboardFeedbackAddNewRoute
  DashboardProgrammesAddNewRoute: typeof DashboardProgrammesAddNewRoute
  DashboardSurveysAddNewRoute: typeof DashboardSurveysAddNewRoute
  DashboardDocumentsIndexRoute: typeof DashboardDocumentsIndexRoute
  DashboardFeedbackIndexRoute: typeof DashboardFeedbackIndexRoute
  DashboardNotificationsIndexRoute: typeof DashboardNotificationsIndexRoute
  DashboardProgrammesIndexRoute: typeof DashboardProgrammesIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardSurveysIndexRoute: typeof DashboardSurveysIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardFeedbackAddNewRoute: DashboardFeedbackAddNewRoute,
  DashboardProgrammesAddNewRoute: DashboardProgrammesAddNewRoute,
  DashboardSurveysAddNewRoute: DashboardSurveysAddNewRoute,
  DashboardDocumentsIndexRoute: DashboardDocumentsIndexRoute,
  DashboardFeedbackIndexRoute: DashboardFeedbackIndexRoute,
  DashboardNotificationsIndexRoute: DashboardNotificationsIndexRoute,
  DashboardProgrammesIndexRoute: DashboardProgrammesIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardSurveysIndexRoute: DashboardSurveysIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface PostsRouteRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  CommunityRouteRoute: CommunityRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  ErrorRoute: ErrorRoute,
  FeedbackProgrammeRoute: FeedbackProgrammeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

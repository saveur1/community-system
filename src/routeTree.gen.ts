/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ErrorRouteImport } from './routes/error'
import { Route as ApprovalRequiredRouteImport } from './routes/approval-required'
import { Route as PostsRouteRouteImport } from './routes/posts/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as AuthRouteRouteImport } from './routes/auth/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as PostsPostIdRouteImport } from './routes/posts/$postId'
import { Route as FeedbackProgrammeRouteImport } from './routes/feedback.$programme'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as DashboardSurveysIndexRouteImport } from './routes/dashboard/surveys/index'
import { Route as DashboardSettingsIndexRouteImport } from './routes/dashboard/settings/index'
import { Route as DashboardProjectsIndexRouteImport } from './routes/dashboard/projects/index'
import { Route as DashboardNotificationsIndexRouteImport } from './routes/dashboard/notifications/index'
import { Route as DashboardFeedbackIndexRouteImport } from './routes/dashboard/feedback/index'
import { Route as DashboardDocumentsIndexRouteImport } from './routes/dashboard/documents/index'
import { Route as DashboardCommunitySessionsIndexRouteImport } from './routes/dashboard/community-sessions/index'
import { Route as DashboardAccountsIndexRouteImport } from './routes/dashboard/accounts/index'
import { Route as DashboardSurveysThankYouRouteImport } from './routes/dashboard/surveys/thank-you'
import { Route as DashboardSurveysTakeSurveyRouteImport } from './routes/dashboard/surveys/take-survey'
import { Route as DashboardSurveysAddNewRouteImport } from './routes/dashboard/surveys/add-new'
import { Route as DashboardSurveysViewIdRouteImport } from './routes/dashboard/surveys/$view-id'
import { Route as DashboardSchoolReportRouteImport } from './routes/dashboard/school/report'
import { Route as DashboardSchoolProfileRouteImport } from './routes/dashboard/school/profile'
import { Route as DashboardProjectsAddNewRouteImport } from './routes/dashboard/projects/add-new'
import { Route as DashboardProjectsViewIdRouteImport } from './routes/dashboard/projects/$view-id'
import { Route as DashboardImmunizationReportRouteImport } from './routes/dashboard/immunization/report'
import { Route as DashboardImmunizationFamilyRouteImport } from './routes/dashboard/immunization/family'
import { Route as DashboardImmunizationAssignedRouteImport } from './routes/dashboard/immunization/assigned'
import { Route as DashboardFeedbackAddNewRouteImport } from './routes/dashboard/feedback/add-new'
import { Route as DashboardAccountsStakeholdersRouteImport } from './routes/dashboard/accounts/stakeholders'
import { Route as DashboardAccountsRichMembersRouteImport } from './routes/dashboard/accounts/rich-members'
import { Route as DashboardAccountsHealthServiceProvidersRouteImport } from './routes/dashboard/accounts/health-service-providers'
import { Route as DashboardAccountsCommunityMembersRouteImport } from './routes/dashboard/accounts/community-members'
import { Route as DashboardSurveysEditEditIdRouteImport } from './routes/dashboard/surveys/edit.$edit-id'

const ErrorRoute = ErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => rootRouteImport,
} as any)
const ApprovalRequiredRoute = ApprovalRequiredRouteImport.update({
  id: '/approval-required',
  path: '/approval-required',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsRouteRoute = PostsRouteRouteImport.update({
  id: '/posts',
  path: '/posts',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PostsRouteRoute,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const PostsPostIdRoute = PostsPostIdRouteImport.update({
  id: '/$postId',
  path: '/$postId',
  getParentRoute: () => PostsRouteRoute,
} as any)
const FeedbackProgrammeRoute = FeedbackProgrammeRouteImport.update({
  id: '/feedback/$programme',
  path: '/feedback/$programme',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRouteRoute,
} as any)
const DashboardSurveysIndexRoute = DashboardSurveysIndexRouteImport.update({
  id: '/surveys/',
  path: '/surveys/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSettingsIndexRoute = DashboardSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProjectsIndexRoute = DashboardProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardNotificationsIndexRoute =
  DashboardNotificationsIndexRouteImport.update({
    id: '/notifications/',
    path: '/notifications/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardFeedbackIndexRoute = DashboardFeedbackIndexRouteImport.update({
  id: '/feedback/',
  path: '/feedback/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardDocumentsIndexRoute = DashboardDocumentsIndexRouteImport.update({
  id: '/documents/',
  path: '/documents/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCommunitySessionsIndexRoute =
  DashboardCommunitySessionsIndexRouteImport.update({
    id: '/community-sessions/',
    path: '/community-sessions/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAccountsIndexRoute = DashboardAccountsIndexRouteImport.update({
  id: '/accounts/',
  path: '/accounts/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSurveysThankYouRoute =
  DashboardSurveysThankYouRouteImport.update({
    id: '/surveys/thank-you',
    path: '/surveys/thank-you',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSurveysTakeSurveyRoute =
  DashboardSurveysTakeSurveyRouteImport.update({
    id: '/surveys/take-survey',
    path: '/surveys/take-survey',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSurveysAddNewRoute = DashboardSurveysAddNewRouteImport.update({
  id: '/surveys/add-new',
  path: '/surveys/add-new',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSurveysViewIdRoute = DashboardSurveysViewIdRouteImport.update({
  id: '/surveys/$view-id',
  path: '/surveys/$view-id',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSchoolReportRoute = DashboardSchoolReportRouteImport.update({
  id: '/school/report',
  path: '/school/report',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSchoolProfileRoute = DashboardSchoolProfileRouteImport.update({
  id: '/school/profile',
  path: '/school/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProjectsAddNewRoute = DashboardProjectsAddNewRouteImport.update({
  id: '/projects/add-new',
  path: '/projects/add-new',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardProjectsViewIdRoute = DashboardProjectsViewIdRouteImport.update({
  id: '/projects/$view-id',
  path: '/projects/$view-id',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardImmunizationReportRoute =
  DashboardImmunizationReportRouteImport.update({
    id: '/immunization/report',
    path: '/immunization/report',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardImmunizationFamilyRoute =
  DashboardImmunizationFamilyRouteImport.update({
    id: '/immunization/family',
    path: '/immunization/family',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardImmunizationAssignedRoute =
  DashboardImmunizationAssignedRouteImport.update({
    id: '/immunization/assigned',
    path: '/immunization/assigned',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardFeedbackAddNewRoute = DashboardFeedbackAddNewRouteImport.update({
  id: '/feedback/add-new',
  path: '/feedback/add-new',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAccountsStakeholdersRoute =
  DashboardAccountsStakeholdersRouteImport.update({
    id: '/accounts/stakeholders',
    path: '/accounts/stakeholders',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAccountsRichMembersRoute =
  DashboardAccountsRichMembersRouteImport.update({
    id: '/accounts/rich-members',
    path: '/accounts/rich-members',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAccountsHealthServiceProvidersRoute =
  DashboardAccountsHealthServiceProvidersRouteImport.update({
    id: '/accounts/health-service-providers',
    path: '/accounts/health-service-providers',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAccountsCommunityMembersRoute =
  DashboardAccountsCommunityMembersRouteImport.update({
    id: '/accounts/community-members',
    path: '/accounts/community-members',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardSurveysEditEditIdRoute =
  DashboardSurveysEditEditIdRouteImport.update({
    id: '/surveys/edit/$edit-id',
    path: '/surveys/edit/$edit-id',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/approval-required': typeof ApprovalRequiredRoute
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/dashboard/accounts/community-members': typeof DashboardAccountsCommunityMembersRoute
  '/dashboard/accounts/health-service-providers': typeof DashboardAccountsHealthServiceProvidersRoute
  '/dashboard/accounts/rich-members': typeof DashboardAccountsRichMembersRoute
  '/dashboard/accounts/stakeholders': typeof DashboardAccountsStakeholdersRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/immunization/assigned': typeof DashboardImmunizationAssignedRoute
  '/dashboard/immunization/family': typeof DashboardImmunizationFamilyRoute
  '/dashboard/immunization/report': typeof DashboardImmunizationReportRoute
  '/dashboard/projects/$view-id': typeof DashboardProjectsViewIdRoute
  '/dashboard/projects/add-new': typeof DashboardProjectsAddNewRoute
  '/dashboard/school/profile': typeof DashboardSchoolProfileRoute
  '/dashboard/school/report': typeof DashboardSchoolReportRoute
  '/dashboard/surveys/$view-id': typeof DashboardSurveysViewIdRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/dashboard/surveys/take-survey': typeof DashboardSurveysTakeSurveyRoute
  '/dashboard/surveys/thank-you': typeof DashboardSurveysThankYouRoute
  '/dashboard/accounts': typeof DashboardAccountsIndexRoute
  '/dashboard/community-sessions': typeof DashboardCommunitySessionsIndexRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/dashboard/projects': typeof DashboardProjectsIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys': typeof DashboardSurveysIndexRoute
  '/dashboard/surveys/edit/$edit-id': typeof DashboardSurveysEditEditIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/approval-required': typeof ApprovalRequiredRoute
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/posts': typeof PostsIndexRoute
  '/dashboard/accounts/community-members': typeof DashboardAccountsCommunityMembersRoute
  '/dashboard/accounts/health-service-providers': typeof DashboardAccountsHealthServiceProvidersRoute
  '/dashboard/accounts/rich-members': typeof DashboardAccountsRichMembersRoute
  '/dashboard/accounts/stakeholders': typeof DashboardAccountsStakeholdersRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/immunization/assigned': typeof DashboardImmunizationAssignedRoute
  '/dashboard/immunization/family': typeof DashboardImmunizationFamilyRoute
  '/dashboard/immunization/report': typeof DashboardImmunizationReportRoute
  '/dashboard/projects/$view-id': typeof DashboardProjectsViewIdRoute
  '/dashboard/projects/add-new': typeof DashboardProjectsAddNewRoute
  '/dashboard/school/profile': typeof DashboardSchoolProfileRoute
  '/dashboard/school/report': typeof DashboardSchoolReportRoute
  '/dashboard/surveys/$view-id': typeof DashboardSurveysViewIdRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/dashboard/surveys/take-survey': typeof DashboardSurveysTakeSurveyRoute
  '/dashboard/surveys/thank-you': typeof DashboardSurveysThankYouRoute
  '/dashboard/accounts': typeof DashboardAccountsIndexRoute
  '/dashboard/community-sessions': typeof DashboardCommunitySessionsIndexRoute
  '/dashboard/documents': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications': typeof DashboardNotificationsIndexRoute
  '/dashboard/projects': typeof DashboardProjectsIndexRoute
  '/dashboard/settings': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys': typeof DashboardSurveysIndexRoute
  '/dashboard/surveys/edit/$edit-id': typeof DashboardSurveysEditEditIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/posts': typeof PostsRouteRouteWithChildren
  '/approval-required': typeof ApprovalRequiredRoute
  '/error': typeof ErrorRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/signup': typeof AuthSignupRoute
  '/feedback/$programme': typeof FeedbackProgrammeRoute
  '/posts/$postId': typeof PostsPostIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/dashboard/accounts/community-members': typeof DashboardAccountsCommunityMembersRoute
  '/dashboard/accounts/health-service-providers': typeof DashboardAccountsHealthServiceProvidersRoute
  '/dashboard/accounts/rich-members': typeof DashboardAccountsRichMembersRoute
  '/dashboard/accounts/stakeholders': typeof DashboardAccountsStakeholdersRoute
  '/dashboard/feedback/add-new': typeof DashboardFeedbackAddNewRoute
  '/dashboard/immunization/assigned': typeof DashboardImmunizationAssignedRoute
  '/dashboard/immunization/family': typeof DashboardImmunizationFamilyRoute
  '/dashboard/immunization/report': typeof DashboardImmunizationReportRoute
  '/dashboard/projects/$view-id': typeof DashboardProjectsViewIdRoute
  '/dashboard/projects/add-new': typeof DashboardProjectsAddNewRoute
  '/dashboard/school/profile': typeof DashboardSchoolProfileRoute
  '/dashboard/school/report': typeof DashboardSchoolReportRoute
  '/dashboard/surveys/$view-id': typeof DashboardSurveysViewIdRoute
  '/dashboard/surveys/add-new': typeof DashboardSurveysAddNewRoute
  '/dashboard/surveys/take-survey': typeof DashboardSurveysTakeSurveyRoute
  '/dashboard/surveys/thank-you': typeof DashboardSurveysThankYouRoute
  '/dashboard/accounts/': typeof DashboardAccountsIndexRoute
  '/dashboard/community-sessions/': typeof DashboardCommunitySessionsIndexRoute
  '/dashboard/documents/': typeof DashboardDocumentsIndexRoute
  '/dashboard/feedback/': typeof DashboardFeedbackIndexRoute
  '/dashboard/notifications/': typeof DashboardNotificationsIndexRoute
  '/dashboard/projects/': typeof DashboardProjectsIndexRoute
  '/dashboard/settings/': typeof DashboardSettingsIndexRoute
  '/dashboard/surveys/': typeof DashboardSurveysIndexRoute
  '/dashboard/surveys/edit/$edit-id': typeof DashboardSurveysEditEditIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/posts'
    | '/approval-required'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/dashboard/'
    | '/posts/'
    | '/dashboard/accounts/community-members'
    | '/dashboard/accounts/health-service-providers'
    | '/dashboard/accounts/rich-members'
    | '/dashboard/accounts/stakeholders'
    | '/dashboard/feedback/add-new'
    | '/dashboard/immunization/assigned'
    | '/dashboard/immunization/family'
    | '/dashboard/immunization/report'
    | '/dashboard/projects/$view-id'
    | '/dashboard/projects/add-new'
    | '/dashboard/school/profile'
    | '/dashboard/school/report'
    | '/dashboard/surveys/$view-id'
    | '/dashboard/surveys/add-new'
    | '/dashboard/surveys/take-survey'
    | '/dashboard/surveys/thank-you'
    | '/dashboard/accounts'
    | '/dashboard/community-sessions'
    | '/dashboard/documents'
    | '/dashboard/feedback'
    | '/dashboard/notifications'
    | '/dashboard/projects'
    | '/dashboard/settings'
    | '/dashboard/surveys'
    | '/dashboard/surveys/edit/$edit-id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/approval-required'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/dashboard'
    | '/posts'
    | '/dashboard/accounts/community-members'
    | '/dashboard/accounts/health-service-providers'
    | '/dashboard/accounts/rich-members'
    | '/dashboard/accounts/stakeholders'
    | '/dashboard/feedback/add-new'
    | '/dashboard/immunization/assigned'
    | '/dashboard/immunization/family'
    | '/dashboard/immunization/report'
    | '/dashboard/projects/$view-id'
    | '/dashboard/projects/add-new'
    | '/dashboard/school/profile'
    | '/dashboard/school/report'
    | '/dashboard/surveys/$view-id'
    | '/dashboard/surveys/add-new'
    | '/dashboard/surveys/take-survey'
    | '/dashboard/surveys/thank-you'
    | '/dashboard/accounts'
    | '/dashboard/community-sessions'
    | '/dashboard/documents'
    | '/dashboard/feedback'
    | '/dashboard/notifications'
    | '/dashboard/projects'
    | '/dashboard/settings'
    | '/dashboard/surveys'
    | '/dashboard/surveys/edit/$edit-id'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dashboard'
    | '/posts'
    | '/approval-required'
    | '/error'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/reset-password'
    | '/auth/signup'
    | '/feedback/$programme'
    | '/posts/$postId'
    | '/dashboard/'
    | '/posts/'
    | '/dashboard/accounts/community-members'
    | '/dashboard/accounts/health-service-providers'
    | '/dashboard/accounts/rich-members'
    | '/dashboard/accounts/stakeholders'
    | '/dashboard/feedback/add-new'
    | '/dashboard/immunization/assigned'
    | '/dashboard/immunization/family'
    | '/dashboard/immunization/report'
    | '/dashboard/projects/$view-id'
    | '/dashboard/projects/add-new'
    | '/dashboard/school/profile'
    | '/dashboard/school/report'
    | '/dashboard/surveys/$view-id'
    | '/dashboard/surveys/add-new'
    | '/dashboard/surveys/take-survey'
    | '/dashboard/surveys/thank-you'
    | '/dashboard/accounts/'
    | '/dashboard/community-sessions/'
    | '/dashboard/documents/'
    | '/dashboard/feedback/'
    | '/dashboard/notifications/'
    | '/dashboard/projects/'
    | '/dashboard/settings/'
    | '/dashboard/surveys/'
    | '/dashboard/surveys/edit/$edit-id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  PostsRouteRoute: typeof PostsRouteRouteWithChildren
  ApprovalRequiredRoute: typeof ApprovalRequiredRoute
  ErrorRoute: typeof ErrorRoute
  FeedbackProgrammeRoute: typeof FeedbackProgrammeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/error': {
      id: '/error'
      path: '/error'
      fullPath: '/error'
      preLoaderRoute: typeof ErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/approval-required': {
      id: '/approval-required'
      path: '/approval-required'
      fullPath: '/approval-required'
      preLoaderRoute: typeof ApprovalRequiredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/'
      fullPath: '/posts/'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/posts/$postId': {
      id: '/posts/$postId'
      path: '/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsRouteRoute
    }
    '/feedback/$programme': {
      id: '/feedback/$programme'
      path: '/feedback/$programme'
      fullPath: '/feedback/$programme'
      preLoaderRoute: typeof FeedbackProgrammeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/dashboard/surveys/': {
      id: '/dashboard/surveys/'
      path: '/surveys'
      fullPath: '/dashboard/surveys'
      preLoaderRoute: typeof DashboardSurveysIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/settings/': {
      id: '/dashboard/settings/'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/projects/': {
      id: '/dashboard/projects/'
      path: '/projects'
      fullPath: '/dashboard/projects'
      preLoaderRoute: typeof DashboardProjectsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/notifications/': {
      id: '/dashboard/notifications/'
      path: '/notifications'
      fullPath: '/dashboard/notifications'
      preLoaderRoute: typeof DashboardNotificationsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/feedback/': {
      id: '/dashboard/feedback/'
      path: '/feedback'
      fullPath: '/dashboard/feedback'
      preLoaderRoute: typeof DashboardFeedbackIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/documents/': {
      id: '/dashboard/documents/'
      path: '/documents'
      fullPath: '/dashboard/documents'
      preLoaderRoute: typeof DashboardDocumentsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/community-sessions/': {
      id: '/dashboard/community-sessions/'
      path: '/community-sessions'
      fullPath: '/dashboard/community-sessions'
      preLoaderRoute: typeof DashboardCommunitySessionsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/accounts/': {
      id: '/dashboard/accounts/'
      path: '/accounts'
      fullPath: '/dashboard/accounts'
      preLoaderRoute: typeof DashboardAccountsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/surveys/thank-you': {
      id: '/dashboard/surveys/thank-you'
      path: '/surveys/thank-you'
      fullPath: '/dashboard/surveys/thank-you'
      preLoaderRoute: typeof DashboardSurveysThankYouRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/surveys/take-survey': {
      id: '/dashboard/surveys/take-survey'
      path: '/surveys/take-survey'
      fullPath: '/dashboard/surveys/take-survey'
      preLoaderRoute: typeof DashboardSurveysTakeSurveyRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/surveys/add-new': {
      id: '/dashboard/surveys/add-new'
      path: '/surveys/add-new'
      fullPath: '/dashboard/surveys/add-new'
      preLoaderRoute: typeof DashboardSurveysAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/surveys/$view-id': {
      id: '/dashboard/surveys/$view-id'
      path: '/surveys/$view-id'
      fullPath: '/dashboard/surveys/$view-id'
      preLoaderRoute: typeof DashboardSurveysViewIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/school/report': {
      id: '/dashboard/school/report'
      path: '/school/report'
      fullPath: '/dashboard/school/report'
      preLoaderRoute: typeof DashboardSchoolReportRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/school/profile': {
      id: '/dashboard/school/profile'
      path: '/school/profile'
      fullPath: '/dashboard/school/profile'
      preLoaderRoute: typeof DashboardSchoolProfileRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/projects/add-new': {
      id: '/dashboard/projects/add-new'
      path: '/projects/add-new'
      fullPath: '/dashboard/projects/add-new'
      preLoaderRoute: typeof DashboardProjectsAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/projects/$view-id': {
      id: '/dashboard/projects/$view-id'
      path: '/projects/$view-id'
      fullPath: '/dashboard/projects/$view-id'
      preLoaderRoute: typeof DashboardProjectsViewIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/immunization/report': {
      id: '/dashboard/immunization/report'
      path: '/immunization/report'
      fullPath: '/dashboard/immunization/report'
      preLoaderRoute: typeof DashboardImmunizationReportRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/immunization/family': {
      id: '/dashboard/immunization/family'
      path: '/immunization/family'
      fullPath: '/dashboard/immunization/family'
      preLoaderRoute: typeof DashboardImmunizationFamilyRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/immunization/assigned': {
      id: '/dashboard/immunization/assigned'
      path: '/immunization/assigned'
      fullPath: '/dashboard/immunization/assigned'
      preLoaderRoute: typeof DashboardImmunizationAssignedRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/feedback/add-new': {
      id: '/dashboard/feedback/add-new'
      path: '/feedback/add-new'
      fullPath: '/dashboard/feedback/add-new'
      preLoaderRoute: typeof DashboardFeedbackAddNewRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/accounts/stakeholders': {
      id: '/dashboard/accounts/stakeholders'
      path: '/accounts/stakeholders'
      fullPath: '/dashboard/accounts/stakeholders'
      preLoaderRoute: typeof DashboardAccountsStakeholdersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/accounts/rich-members': {
      id: '/dashboard/accounts/rich-members'
      path: '/accounts/rich-members'
      fullPath: '/dashboard/accounts/rich-members'
      preLoaderRoute: typeof DashboardAccountsRichMembersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/accounts/health-service-providers': {
      id: '/dashboard/accounts/health-service-providers'
      path: '/accounts/health-service-providers'
      fullPath: '/dashboard/accounts/health-service-providers'
      preLoaderRoute: typeof DashboardAccountsHealthServiceProvidersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/accounts/community-members': {
      id: '/dashboard/accounts/community-members'
      path: '/accounts/community-members'
      fullPath: '/dashboard/accounts/community-members'
      preLoaderRoute: typeof DashboardAccountsCommunityMembersRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/surveys/edit/$edit-id': {
      id: '/dashboard/surveys/edit/$edit-id'
      path: '/surveys/edit/$edit-id'
      fullPath: '/dashboard/surveys/edit/$edit-id'
      preLoaderRoute: typeof DashboardSurveysEditEditIdRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface AuthRouteRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAccountsCommunityMembersRoute: typeof DashboardAccountsCommunityMembersRoute
  DashboardAccountsHealthServiceProvidersRoute: typeof DashboardAccountsHealthServiceProvidersRoute
  DashboardAccountsRichMembersRoute: typeof DashboardAccountsRichMembersRoute
  DashboardAccountsStakeholdersRoute: typeof DashboardAccountsStakeholdersRoute
  DashboardFeedbackAddNewRoute: typeof DashboardFeedbackAddNewRoute
  DashboardImmunizationAssignedRoute: typeof DashboardImmunizationAssignedRoute
  DashboardImmunizationFamilyRoute: typeof DashboardImmunizationFamilyRoute
  DashboardImmunizationReportRoute: typeof DashboardImmunizationReportRoute
  DashboardProjectsViewIdRoute: typeof DashboardProjectsViewIdRoute
  DashboardProjectsAddNewRoute: typeof DashboardProjectsAddNewRoute
  DashboardSchoolProfileRoute: typeof DashboardSchoolProfileRoute
  DashboardSchoolReportRoute: typeof DashboardSchoolReportRoute
  DashboardSurveysViewIdRoute: typeof DashboardSurveysViewIdRoute
  DashboardSurveysAddNewRoute: typeof DashboardSurveysAddNewRoute
  DashboardSurveysTakeSurveyRoute: typeof DashboardSurveysTakeSurveyRoute
  DashboardSurveysThankYouRoute: typeof DashboardSurveysThankYouRoute
  DashboardAccountsIndexRoute: typeof DashboardAccountsIndexRoute
  DashboardCommunitySessionsIndexRoute: typeof DashboardCommunitySessionsIndexRoute
  DashboardDocumentsIndexRoute: typeof DashboardDocumentsIndexRoute
  DashboardFeedbackIndexRoute: typeof DashboardFeedbackIndexRoute
  DashboardNotificationsIndexRoute: typeof DashboardNotificationsIndexRoute
  DashboardProjectsIndexRoute: typeof DashboardProjectsIndexRoute
  DashboardSettingsIndexRoute: typeof DashboardSettingsIndexRoute
  DashboardSurveysIndexRoute: typeof DashboardSurveysIndexRoute
  DashboardSurveysEditEditIdRoute: typeof DashboardSurveysEditEditIdRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAccountsCommunityMembersRoute:
    DashboardAccountsCommunityMembersRoute,
  DashboardAccountsHealthServiceProvidersRoute:
    DashboardAccountsHealthServiceProvidersRoute,
  DashboardAccountsRichMembersRoute: DashboardAccountsRichMembersRoute,
  DashboardAccountsStakeholdersRoute: DashboardAccountsStakeholdersRoute,
  DashboardFeedbackAddNewRoute: DashboardFeedbackAddNewRoute,
  DashboardImmunizationAssignedRoute: DashboardImmunizationAssignedRoute,
  DashboardImmunizationFamilyRoute: DashboardImmunizationFamilyRoute,
  DashboardImmunizationReportRoute: DashboardImmunizationReportRoute,
  DashboardProjectsViewIdRoute: DashboardProjectsViewIdRoute,
  DashboardProjectsAddNewRoute: DashboardProjectsAddNewRoute,
  DashboardSchoolProfileRoute: DashboardSchoolProfileRoute,
  DashboardSchoolReportRoute: DashboardSchoolReportRoute,
  DashboardSurveysViewIdRoute: DashboardSurveysViewIdRoute,
  DashboardSurveysAddNewRoute: DashboardSurveysAddNewRoute,
  DashboardSurveysTakeSurveyRoute: DashboardSurveysTakeSurveyRoute,
  DashboardSurveysThankYouRoute: DashboardSurveysThankYouRoute,
  DashboardAccountsIndexRoute: DashboardAccountsIndexRoute,
  DashboardCommunitySessionsIndexRoute: DashboardCommunitySessionsIndexRoute,
  DashboardDocumentsIndexRoute: DashboardDocumentsIndexRoute,
  DashboardFeedbackIndexRoute: DashboardFeedbackIndexRoute,
  DashboardNotificationsIndexRoute: DashboardNotificationsIndexRoute,
  DashboardProjectsIndexRoute: DashboardProjectsIndexRoute,
  DashboardSettingsIndexRoute: DashboardSettingsIndexRoute,
  DashboardSurveysIndexRoute: DashboardSurveysIndexRoute,
  DashboardSurveysEditEditIdRoute: DashboardSurveysEditEditIdRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

interface PostsRouteRouteChildren {
  PostsPostIdRoute: typeof PostsPostIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
}

const PostsRouteRouteChildren: PostsRouteRouteChildren = {
  PostsPostIdRoute: PostsPostIdRoute,
  PostsIndexRoute: PostsIndexRoute,
}

const PostsRouteRouteWithChildren = PostsRouteRoute._addFileChildren(
  PostsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  PostsRouteRoute: PostsRouteRouteWithChildren,
  ApprovalRequiredRoute: ApprovalRequiredRoute,
  ErrorRoute: ErrorRoute,
  FeedbackProgrammeRoute: FeedbackProgrammeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
